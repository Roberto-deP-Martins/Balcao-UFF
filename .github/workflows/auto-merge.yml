name: Auto Merge Pull Request

on:
  pull_request:
    types: [synchronize, opened, reopened, ready_for_review]
  workflow_dispatch:

jobs:
  auto-merge:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Verify Pull Request Merge Conditions
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Checking merge conditions for PR..."

          # Obtém o número da pull request
          PR_NUMBER=$(gh pr list --state open --base main --json number -q ".[0].number")

          if [[ -z "$PR_NUMBER" ]]; then
            echo "No open PR found for the specified base branch. Exiting."
            exit 1
          fi

          echo "PR Number: $PR_NUMBER"

          # Função para verificar status dos checks
          check_status() {
            STATUS_CHECKS=$(gh pr view "$PR_NUMBER" --json statusCheckRollup -q ".statusCheckRollup")
            echo "Status checks (raw): $STATUS_CHECKS"
            STATUS_CHECK_STATES=$(echo $STATUS_CHECKS | jq -r '.[].state')
            echo "Status check states: $STATUS_CHECK_STATES"
          }

          # Aguarda até que todos os checks estejam concluídos
          check_status
          while echo "$STATUS_CHECK_STATES" | grep -q "IN_PROGRESS"; do
            echo "Waiting for status checks to complete..."
            sleep 10  # Aguarda 10 segundos antes de verificar novamente
            check_status
          done

          if echo "$STATUS_CHECK_STATES" | grep -qv "SUCCESS"; then
            echo "Not all checks have passed. Exiting."
            exit 1
          fi

          # Verifica se não há conflitos
          CONFLICTS=$(gh pr view "$PR_NUMBER" --json mergeable -q ".mergeable")
          echo "Mergeable: $CONFLICTS"
          if [[ "$CONFLICTS" != "MERGEABLE" ]]; then
            echo "PR has conflicts and cannot be merged. Exiting."
            exit 1
          fi

          echo "All conditions met for auto-merge."
          echo "merge=true" >> $GITHUB_ENV

      - name: Auto Merge Pull Request
        if: env.merge == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Merging PR #$PR_NUMBER..."
          gh pr merge $PR_NUMBER --merge --repo ${{ github.repository }}
          echo "Pull Request #$PR_NUMBER merged successfully!"
